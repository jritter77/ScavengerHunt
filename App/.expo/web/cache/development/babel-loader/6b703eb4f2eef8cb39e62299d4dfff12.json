{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport 'react-native-gesture-handler';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator, DrawerToggleButton } from '@react-navigation/drawer';\nimport React from 'react';\nimport Dashboard from \"./views/dashboard/Dashboard\";\nimport ProfileStack from \"./views/profile/Index.js\";\nimport HuntStack from \"./views/hunts/Index.js\";\nimport FriendStack from \"./views/friends/Index.js\";\nimport LoginStack from \"./views/loginSignup/Index.js\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nexport default function App() {\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    userId = _React$useState2[0],\n    setUserId = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    loggedIn = _React$useState4[0],\n    setLoggedIn = _React$useState4[1];\n  if (loggedIn) {\n    console.log(userId);\n    return _jsx(NavigationContainer, {\n      children: _jsxs(Drawer.Navigator, {\n        initialRouteName: \"Dashboard\",\n        screenOptions: _objectSpread({\n          headerLeft: function headerLeft(props) {\n            return _jsx(DrawerToggleButton, _objectSpread({\n              style: {\n                innerHeight: 100,\n                innerWidth: 100\n              }\n            }, props));\n          }\n        }, HeaderOptions),\n        children: [_jsx(Drawer.Screen, {\n          name: \"ProfileStack\",\n          component: ProfileStack,\n          options: {\n            drawerLabel: 'Profile'\n          }\n        }), _jsx(Drawer.Screen, {\n          name: \"Dashboard\",\n          component: Dashboard\n        }), _jsx(Drawer.Screen, {\n          name: \"HuntStack\",\n          component: HuntStack,\n          options: {\n            drawerLabel: 'Scavenger Hunts'\n          }\n        }), _jsx(Drawer.Screen, {\n          name: \"FriendStack\",\n          component: FriendStack,\n          options: {\n            drawerLabel: 'Friends'\n          }\n        })]\n      })\n    });\n  } else {\n    return _jsx(LoginStack, {\n      setLoggedIn: setLoggedIn,\n      setUserId: setUserId\n    });\n  }\n}\nvar HeaderOptions = {\n  headerTitleAlign: 'center',\n  headerTitle: 'Lookout!',\n  headerTintColor: 'white',\n  headerTitleStyle: {\n    fontSize: 40,\n    fontWeight: 'bold'\n  },\n  headerBackground: function headerBackground() {\n    return _jsx(LinearGradient, {\n      colors: ['#53ECFC', '#F283B3'],\n      style: {\n        flex: 1\n      },\n      start: {\n        x: 0,\n        y: 0\n      },\n      end: {\n        x: 0,\n        y: 1\n      }\n    });\n  }\n};","map":{"version":3,"names":["NavigationContainer","createDrawerNavigator","DrawerToggleButton","React","Dashboard","ProfileStack","HuntStack","FriendStack","LoginStack","LinearGradient","Drawer","App","useState","userId","setUserId","loggedIn","setLoggedIn","console","log","headerLeft","props","innerHeight","innerWidth","HeaderOptions","drawerLabel","headerTitleAlign","headerTitle","headerTintColor","headerTitleStyle","fontSize","fontWeight","headerBackground","flex","x","y"],"sources":["C:/Users/jaker/Desktop/ScavengerHunt_hunts/App/App.js"],"sourcesContent":["import 'react-native-gesture-handler';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createDrawerNavigator, DrawerToggleButton } from '@react-navigation/drawer';\r\nimport React from 'react';\r\n\r\n\r\nimport Dashboard from './views/dashboard/Dashboard';\r\n\r\n\r\nimport ProfileStack from './views/profile/Index.js';\r\nimport HuntStack from './views/hunts/Index.js';\r\nimport FriendStack from './views/friends/Index.js';\r\nimport LoginStack from './views/loginSignup/Index.js';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\n\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\n\r\n\r\nexport default function App() {\r\n\r\n  const [userId, setUserId] = React.useState('');\r\n\r\n  const [loggedIn, setLoggedIn] = React.useState(false);\r\n\r\n\r\n\r\n\r\n  if (loggedIn) {\r\n    console.log(userId);\r\n    return (\r\n      <NavigationContainer>\r\n        <Drawer.Navigator initialRouteName='Dashboard' screenOptions={{headerLeft: (props) => <DrawerToggleButton style={{innerHeight: 100, innerWidth: 100}} {...props}/>,...HeaderOptions}} >\r\n            <Drawer.Screen \r\n              name='ProfileStack'\r\n              component={ProfileStack}\r\n              options={{drawerLabel: 'Profile'}}\r\n            />\r\n            <Drawer.Screen \r\n              name='Dashboard'\r\n              component={Dashboard}\r\n            />\r\n            <Drawer.Screen \r\n              name='HuntStack'\r\n              component={HuntStack}\r\n              options={{drawerLabel: 'Scavenger Hunts'}}\r\n            />\r\n            <Drawer.Screen \r\n              name='FriendStack'\r\n              component={FriendStack}\r\n              options={{drawerLabel: 'Friends'}}\r\n            />\r\n        </Drawer.Navigator>\r\n      </NavigationContainer>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n        <LoginStack setLoggedIn={setLoggedIn} setUserId={setUserId}/>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\n\r\nconst HeaderOptions = {\r\n  headerTitleAlign: 'center',\r\n  headerTitle: 'Lookout!',\r\n  headerTintColor: 'white',\r\n  headerTitleStyle: {fontSize: 40, fontWeight: 'bold'},\r\n  headerBackground: \r\n  () => (<LinearGradient \r\n        colors={['#53ECFC', '#F283B3']}\r\n        style={{ flex: 1 }}\r\n        start={{x: 0, y: 0}}\r\n        end={{x: 0, y: 1}}\r\n  />)\r\n};"],"mappings":";;;;AAAA,OAAO,8BAA8B;AAAC;AAAA;AAAA;AAEtC,SAASA,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,qBAAqB,EAAEC,kBAAkB,QAAQ,0BAA0B;AACpF,OAAOC,KAAK,MAAM,OAAO;AAGzB,OAAOC,SAAS;AAGhB,OAAOC,YAAY;AACnB,OAAOC,SAAS;AAChB,OAAOC,WAAW;AAClB,OAAOC,UAAU;AACjB,SAASC,cAAc,QAAQ,sBAAsB;AAAC;AAAA;AAItD,IAAMC,MAAM,GAAGT,qBAAqB,EAAE;AAItC,eAAe,SAASU,GAAG,GAAG;EAE5B,sBAA4BR,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAvCC,MAAM;IAAEC,SAAS;EAExB,uBAAgCX,KAAK,CAACS,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA9CG,QAAQ;IAAEC,WAAW;EAK5B,IAAID,QAAQ,EAAE;IACZE,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;IACnB,OACE,KAAC,mBAAmB;MAAA,UAClB,MAAC,MAAM,CAAC,SAAS;QAAC,gBAAgB,EAAC,WAAW;QAAC,aAAa;UAAGM,UAAU,EAAE,oBAACC,KAAK;YAAA,OAAK,KAAC,kBAAkB;cAAC,KAAK,EAAE;gBAACC,WAAW,EAAE,GAAG;gBAAEC,UAAU,EAAE;cAAG;YAAE,GAAKF,KAAK,EAAG;UAAA;QAAA,GAAIG,aAAa,CAAE;QAAA,WACjL,KAAC,MAAM,CAAC,MAAM;UACZ,IAAI,EAAC,cAAc;UACnB,SAAS,EAAElB,YAAa;UACxB,OAAO,EAAE;YAACmB,WAAW,EAAE;UAAS;QAAE,EAClC,EACF,KAAC,MAAM,CAAC,MAAM;UACZ,IAAI,EAAC,WAAW;UAChB,SAAS,EAAEpB;QAAU,EACrB,EACF,KAAC,MAAM,CAAC,MAAM;UACZ,IAAI,EAAC,WAAW;UAChB,SAAS,EAAEE,SAAU;UACrB,OAAO,EAAE;YAACkB,WAAW,EAAE;UAAiB;QAAE,EAC1C,EACF,KAAC,MAAM,CAAC,MAAM;UACZ,IAAI,EAAC,aAAa;UAClB,SAAS,EAAEjB,WAAY;UACvB,OAAO,EAAE;YAACiB,WAAW,EAAE;UAAS;QAAE,EAClC;MAAA;IACa,EACC;EAE1B,CAAC,MACI;IACH,OACI,KAAC,UAAU;MAAC,WAAW,EAAER,WAAY;MAAC,SAAS,EAAEF;IAAU,EAAE;EAEnE;AAEF;AAGA,IAAMS,aAAa,GAAG;EACpBE,gBAAgB,EAAE,QAAQ;EAC1BC,WAAW,EAAE,UAAU;EACvBC,eAAe,EAAE,OAAO;EACxBC,gBAAgB,EAAE;IAACC,QAAQ,EAAE,EAAE;IAAEC,UAAU,EAAE;EAAM,CAAC;EACpDC,gBAAgB,EAChB;IAAA,OAAO,KAAC,cAAc;MAChB,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAE;MAC/B,KAAK,EAAE;QAAEC,IAAI,EAAE;MAAE,CAAE;MACnB,KAAK,EAAE;QAACC,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAC,CAAE;MACpB,GAAG,EAAE;QAACD,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAC;IAAE,EACtB;EAAA;AACJ,CAAC"},"metadata":{},"sourceType":"module"}