{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React from 'react';\nimport StandardButton from \"../../components/StandardButton\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport { useNavigation } from '@react-navigation/native';\nimport Styles from \"../../Styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login(_ref) {\n  var setLoggedIn = _ref.setLoggedIn,\n    setUserId = _ref.setUserId;\n  var navigation = useNavigation();\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    username = _React$useState2[0],\n    setUsername = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    password = _React$useState4[0],\n    setPassword = _React$useState4[1];\n  function handleSubmit() {\n\n    console.log(username, password);\n    setLoggedIn(true);\n    setUserId('George');\n  }\n  return _jsxs(View, {\n    style: Styles.StandardStyles.page,\n    children: [_jsx(TextInput, {\n      onChangeText: setUsername,\n      placeholder: \"Username\",\n      style: Styles.StandardStyles.textInput\n    }), _jsx(TextInput, {\n      onChangeText: setPassword,\n      placeholder: \"Password\",\n      style: Styles.StandardStyles.textInput\n    }), _jsx(StandardButton, {\n      title: \"Login\",\n      onPress: function onPress() {\n        handleSubmit();\n      }\n    }), _jsx(StandardButton, {\n      title: \"SignUp\",\n      onPress: function onPress() {\n        navigation.navigate('SignUp');\n      }\n    })]\n  });\n};\nexport default Login;","map":{"version":3,"names":["React","StandardButton","TextInput","useNavigation","Styles","Login","setLoggedIn","setUserId","navigation","useState","username","setUsername","password","setPassword","handleSubmit","console","log","StandardStyles","page","textInput","navigate"],"sources":["C:/Users/jaker/Desktop/ScavengerHunt_hunts/App/views/loginSignup/Login.js"],"sourcesContent":["import { View, Text, Button, StyleSheet } from 'react-native'\r\nimport React from 'react'\r\nimport StandardButton from '../../components/StandardButton'\r\nimport { TextInput } from 'react-native-gesture-handler'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport Styles from '../../Styles'\r\n\r\nconst Login = ({setLoggedIn, setUserId}) => {\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const [username, setUsername] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n\r\n  function handleSubmit() {\r\n    // Verify credentials are not blank or violate syntax\r\n\r\n    // Send credentials to server for verification\r\n\r\n    // Get response from server, if valid a cookie with JWT token will be returned and stored\r\n\r\n    // Else give feedback and stay at login screen\r\n\r\n    console.log(username, password);\r\n\r\n    setLoggedIn(true);\r\n\r\n    setUserId('George')\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <View style={Styles.StandardStyles.page}>\r\n        <TextInput \r\n          onChangeText={setUsername}\r\n          placeholder='Username'\r\n          style={Styles.StandardStyles.textInput}\r\n        />\r\n        <TextInput \r\n          onChangeText={setPassword}\r\n          placeholder='Password'\r\n          style={Styles.StandardStyles.textInput}\r\n        />\r\n        <StandardButton \r\n          title='Login'\r\n          onPress={() => {\r\n            handleSubmit();\r\n          }}\r\n        />\r\n        <StandardButton \r\n          title='SignUp'\r\n          onPress={() => {\r\n            navigation.navigate('SignUp');\r\n          }}\r\n        />\r\n    </View>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Login"],"mappings":";;;;;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc;AACrB,SAASC,SAAS,QAAQ,8BAA8B;AACxD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,MAAM;AAAoB;AAAA;AAEjC,IAAMC,KAAK,GAAG,SAARA,KAAK,OAAiC;EAAA,IAA5BC,WAAW,QAAXA,WAAW;IAAEC,SAAS,QAATA,SAAS;EAEpC,IAAMC,UAAU,GAAGL,aAAa,EAAE;EAElC,sBAAgCH,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA3CC,QAAQ;IAAEC,WAAW;EAC5B,uBAAgCX,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA3CG,QAAQ;IAAEC,WAAW;EAE5B,SAASC,YAAY,GAAG;;IAStBC,OAAO,CAACC,GAAG,CAACN,QAAQ,EAAEE,QAAQ,CAAC;IAE/BN,WAAW,CAAC,IAAI,CAAC;IAEjBC,SAAS,CAAC,QAAQ,CAAC;EACrB;EAIA,OACE,MAAC,IAAI;IAAC,KAAK,EAAEH,MAAM,CAACa,cAAc,CAACC,IAAK;IAAA,WACpC,KAAC,SAAS;MACR,YAAY,EAAEP,WAAY;MAC1B,WAAW,EAAC,UAAU;MACtB,KAAK,EAAEP,MAAM,CAACa,cAAc,CAACE;IAAU,EACvC,EACF,KAAC,SAAS;MACR,YAAY,EAAEN,WAAY;MAC1B,WAAW,EAAC,UAAU;MACtB,KAAK,EAAET,MAAM,CAACa,cAAc,CAACE;IAAU,EACvC,EACF,KAAC,cAAc;MACb,KAAK,EAAC,OAAO;MACb,OAAO,EAAE,mBAAM;QACbL,YAAY,EAAE;MAChB;IAAE,EACF,EACF,KAAC,cAAc;MACb,KAAK,EAAC,QAAQ;MACd,OAAO,EAAE,mBAAM;QACbN,UAAU,CAACY,QAAQ,CAAC,QAAQ,CAAC;MAC/B;IAAE,EACF;EAAA,EACC;AAEX,CAAC;AAKD,eAAef,KAAK"},"metadata":{},"sourceType":"module"}