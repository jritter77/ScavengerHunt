{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport 'react-native-gesture-handler';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport React from 'react';\nimport Dashboard from \"./views/dashboard/Dashboard\";\nimport ProfileStack from \"./views/profile/Index.js\";\nimport HuntStack from \"./views/hunts/Index.js\";\nimport FriendStack from \"./views/friends/Index.js\";\nimport LoginStack from \"./views/loginSignup/Index.js\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nexport default function App() {\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    userId = _React$useState2[0],\n    setUserId = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    loggedIn = _React$useState4[0],\n    setLoggedIn = _React$useState4[1];\n  if (loggedIn) {\n    console.log(userId);\n    return _jsx(NavigationContainer, {\n      children: _jsx(Drawer.Navigator, {\n        initialRouteName: \"Dashboard\",\n        children: _jsxs(Drawer.Group, {\n          screenOptions: {\n            headerTitle: 'Lookout!',\n            headerTransparent: true,\n            headerBackground: _jsx(LinearGradient, {\n              colors: ['#a13388', '#10356c'],\n              style: {\n                flex: 1\n              },\n              start: {\n                x: 0,\n                y: 0\n              },\n              end: {\n                x: 1,\n                y: 0\n              }\n            })\n          },\n          children: [_jsx(Drawer.Screen, {\n            name: \"ProfileStack\",\n            component: ProfileStack,\n            options: {\n              drawerLabel: 'Profile'\n            }\n          }), _jsx(Drawer.Screen, {\n            name: \"Dashboard\",\n            component: Dashboard\n          }), _jsx(Drawer.Screen, {\n            name: \"HuntStack\",\n            component: HuntStack,\n            options: {\n              drawerLabel: 'Scavenger Hunts'\n            }\n          }), _jsx(Drawer.Screen, {\n            name: \"FriendStack\",\n            component: FriendStack,\n            options: {\n              drawerLabel: 'Friends'\n            }\n          })]\n        })\n      })\n    });\n  } else {\n    return _jsx(LoginStack, {\n      setLoggedIn: setLoggedIn,\n      setUserId: setUserId\n    });\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["NavigationContainer","createDrawerNavigator","React","Dashboard","ProfileStack","HuntStack","FriendStack","LoginStack","LinearGradient","Drawer","App","useState","userId","setUserId","loggedIn","setLoggedIn","console","log","headerTitle","headerTransparent","headerBackground","flex","x","y","drawerLabel","styles","StyleSheet","create","container","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/jaker/Desktop/ScavengerHunt_hunts/App/App.js"],"sourcesContent":["import 'react-native-gesture-handler';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport React from 'react';\r\n\r\n\r\nimport Dashboard from './views/dashboard/Dashboard';\r\n\r\n\r\nimport ProfileStack from './views/profile/Index.js';\r\nimport HuntStack from './views/hunts/Index.js';\r\nimport FriendStack from './views/friends/Index.js';\r\nimport LoginStack from './views/loginSignup/Index.js';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\n\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\n\r\n\r\nexport default function App() {\r\n\r\n  const [userId, setUserId] = React.useState('');\r\n\r\n  const [loggedIn, setLoggedIn] = React.useState(false);\r\n\r\n\r\n\r\n\r\n  if (loggedIn) {\r\n    console.log(userId);\r\n    return (\r\n      <NavigationContainer>\r\n        <Drawer.Navigator initialRouteName='Dashboard' >\r\n          <Drawer.Group screenOptions={{\r\n              headerTitle: 'Lookout!', \r\n              headerTransparent: true,\r\n              headerBackground: \r\n              <LinearGradient \r\n                colors={['#a13388', '#10356c']}\r\n                style={{ flex: 1 }}\r\n                start={{x: 0, y: 0}}\r\n                end={{x: 1, y: 0}}\r\n              />\r\n            }}>\r\n            <Drawer.Screen \r\n              name='ProfileStack'\r\n              component={ProfileStack}\r\n              options={{drawerLabel: 'Profile'}}\r\n            />\r\n            <Drawer.Screen \r\n              name='Dashboard'\r\n              component={Dashboard}\r\n            />\r\n            <Drawer.Screen \r\n              name='HuntStack'\r\n              component={HuntStack}\r\n              options={{drawerLabel: 'Scavenger Hunts'}}\r\n            />\r\n            <Drawer.Screen \r\n              name='FriendStack'\r\n              component={FriendStack}\r\n              options={{drawerLabel: 'Friends'}}\r\n            />\r\n          </Drawer.Group>\r\n        </Drawer.Navigator>\r\n      </NavigationContainer>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n        <LoginStack setLoggedIn={setLoggedIn} setUserId={setUserId}/>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"],"mappings":";AAAA,OAAO,8BAA8B;AAAC;AAAA;AAAA;AAEtC,SAASA,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,qBAAqB,QAAQ,0BAA0B;AAChE,OAAOC,KAAK,MAAM,OAAO;AAGzB,OAAOC,SAAS;AAGhB,OAAOC,YAAY;AACnB,OAAOC,SAAS;AAChB,OAAOC,WAAW;AAClB,OAAOC,UAAU;AACjB,SAASC,cAAc,QAAQ,sBAAsB;AAAC;AAAA;AAItD,IAAMC,MAAM,GAAGR,qBAAqB,EAAE;AAItC,eAAe,SAASS,GAAG,GAAG;EAE5B,sBAA4BR,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAvCC,MAAM;IAAEC,SAAS;EAExB,uBAAgCX,KAAK,CAACS,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA9CG,QAAQ;IAAEC,WAAW;EAK5B,IAAID,QAAQ,EAAE;IACZE,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;IACnB,OACE,KAAC,mBAAmB;MAAA,UAClB,KAAC,MAAM,CAAC,SAAS;QAAC,gBAAgB,EAAC,WAAW;QAAA,UAC5C,MAAC,MAAM,CAAC,KAAK;UAAC,aAAa,EAAE;YACzBM,WAAW,EAAE,UAAU;YACvBC,iBAAiB,EAAE,IAAI;YACvBC,gBAAgB,EAChB,KAAC,cAAc;cACb,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAE;cAC/B,KAAK,EAAE;gBAAEC,IAAI,EAAE;cAAE,CAAE;cACnB,KAAK,EAAE;gBAACC,CAAC,EAAE,CAAC;gBAAEC,CAAC,EAAE;cAAC,CAAE;cACpB,GAAG,EAAE;gBAACD,CAAC,EAAE,CAAC;gBAAEC,CAAC,EAAE;cAAC;YAAE;UAEtB,CAAE;UAAA,WACF,KAAC,MAAM,CAAC,MAAM;YACZ,IAAI,EAAC,cAAc;YACnB,SAAS,EAAEnB,YAAa;YACxB,OAAO,EAAE;cAACoB,WAAW,EAAE;YAAS;UAAE,EAClC,EACF,KAAC,MAAM,CAAC,MAAM;YACZ,IAAI,EAAC,WAAW;YAChB,SAAS,EAAErB;UAAU,EACrB,EACF,KAAC,MAAM,CAAC,MAAM;YACZ,IAAI,EAAC,WAAW;YAChB,SAAS,EAAEE,SAAU;YACrB,OAAO,EAAE;cAACmB,WAAW,EAAE;YAAiB;UAAE,EAC1C,EACF,KAAC,MAAM,CAAC,MAAM;YACZ,IAAI,EAAC,aAAa;YAClB,SAAS,EAAElB,WAAY;YACvB,OAAO,EAAE;cAACkB,WAAW,EAAE;YAAS;UAAE,EAClC;QAAA;MACW;IACE,EACC;EAE1B,CAAC,MACI;IACH,OACI,KAAC,UAAU;MAAC,WAAW,EAAET,WAAY;MAAC,SAAS,EAAEF;IAAU,EAAE;EAEnE;AAEF;AAGA,IAAMY,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTP,IAAI,EAAE,CAAC;IACPQ,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}