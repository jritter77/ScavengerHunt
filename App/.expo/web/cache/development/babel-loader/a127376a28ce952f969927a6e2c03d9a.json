{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport 'react-native-gesture-handler';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport React from 'react';\nimport ActiveHunt from \"./views/hunts/ActiveHunt\";\nimport AddFriend from \"./views/friends/AddFriend\";\nimport ChangeCredentials from \"./views/profile/ChangeCredentials\";\nimport Dashboard from \"./views/dashboard/Dashboard\";\nimport CreateHunt from \"./views/hunts/CreateHunt\";\nimport FindHunts from \"./views/hunts/FindHunts\";\nimport Friends from \"./views/friends/Friends\";\nimport FriendRequests from \"./views/friends/FriendRequests\";\nimport FriendProfile from \"./views/friends/FriendProfile\";\nimport HuntInfo from \"./views/hunts/HuntInfo\";\nimport Hunts from \"./views/hunts/Hunts\";\nimport Login from \"./views/loginSignup/Login\";\nimport Profile from \"./views/profile/Profile\";\nimport Settings from \"./views/profile/Settings\";\nimport SignUp from \"./views/loginSignup/SignUp\";\nimport ProfileStack from \"./views/profile\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Drawer = createDrawerNavigator();\nexport default function App() {\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    loggedIn = _React$useState2[0],\n    setLoggedIn = _React$useState2[1];\n  if (loggedIn) {\n    return _jsx(NavigationContainer, {\n      children: _jsx(Drawer.Navigator, {\n        initialRouteName: \"Dashboard\",\n        children: _jsxs(Drawer.Group, {\n          screenOptions: {\n            headerTitle: 'Lookout!'\n          },\n          children: [_jsx(Drawer.Screen, {\n            name: \"ProfileStack\",\n            component: ProfileStack,\n            options: {\n              drawerLabel: 'Profile'\n            }\n          }), _jsx(Drawer.Screen, {\n            name: \"Dashboard\",\n            component: Dashboard\n          }), _jsx(Drawer.Screen, {\n            name: \"Hunts\",\n            component: Hunts,\n            options: {\n              drawerLabel: 'Scavenger Hunts'\n            }\n          }), _jsx(Drawer.Screen, {\n            name: \"Friends\",\n            component: Friends\n          })]\n        })\n      })\n    });\n  } else {\n    return _jsx(Login, {\n      setLoggedIn: setLoggedIn\n    });\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["NavigationContainer","createNativeStackNavigator","createDrawerNavigator","React","ActiveHunt","AddFriend","ChangeCredentials","Dashboard","CreateHunt","FindHunts","Friends","FriendRequests","FriendProfile","HuntInfo","Hunts","Login","Profile","Settings","SignUp","ProfileStack","Stack","Drawer","App","useState","loggedIn","setLoggedIn","headerTitle","drawerLabel","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/jaker/Desktop/ScavengerHunt_navigation/App/App.js"],"sourcesContent":["import 'react-native-gesture-handler';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport React from 'react';\r\n\r\nimport ActiveHunt from './views/hunts/ActiveHunt';\r\nimport AddFriend from './views/friends/AddFriend';\r\nimport ChangeCredentials from './views/profile/ChangeCredentials';\r\nimport Dashboard from './views/dashboard/Dashboard';\r\nimport CreateHunt from './views/hunts/CreateHunt';\r\nimport FindHunts from './views/hunts/FindHunts';\r\nimport Friends from './views/friends/Friends';\r\nimport FriendRequests from './views/friends/FriendRequests';\r\nimport FriendProfile from './views/friends/FriendProfile';\r\nimport HuntInfo from './views/hunts/HuntInfo';\r\nimport Hunts from './views/hunts/Hunts';\r\nimport Login from './views/loginSignup/Login';\r\nimport Profile from './views/profile/Profile';\r\nimport Settings from './views/profile/Settings';\r\nimport SignUp from './views/loginSignup/SignUp';\r\nimport ProfileStack from './views/profile';\r\n\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Drawer = createDrawerNavigator();\r\n\r\n\r\n\r\nexport default function App() {\r\n\r\nconst [loggedIn, setLoggedIn] = React.useState(false);\r\n\r\n\r\n\r\n\r\n  if (loggedIn) {\r\n    return (\r\n      <NavigationContainer>\r\n        <Drawer.Navigator initialRouteName='Dashboard' >\r\n          <Drawer.Group screenOptions={{headerTitle: 'Lookout!'}}>\r\n            <Drawer.Screen \r\n              name='ProfileStack'\r\n              component={ProfileStack}\r\n              options={{drawerLabel: 'Profile'}}\r\n            />\r\n            <Drawer.Screen \r\n              name='Dashboard'\r\n              component={Dashboard}\r\n            />\r\n            <Drawer.Screen \r\n              name='Hunts'\r\n              component={Hunts}\r\n              options={{drawerLabel: 'Scavenger Hunts'}}\r\n            />\r\n            <Drawer.Screen \r\n              name='Friends'\r\n              component={Friends}\r\n            />\r\n          </Drawer.Group>\r\n        </Drawer.Navigator>\r\n      </NavigationContainer>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <Login setLoggedIn={setLoggedIn} />\r\n    )\r\n  }\r\n  \r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"],"mappings":";AAAA,OAAO,8BAA8B;AAAC;AAAA;AAAA;AAEtC,SAASA,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,qBAAqB,QAAQ,0BAA0B;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,UAAU;AACjB,OAAOC,SAAS;AAChB,OAAOC,iBAAiB;AACxB,OAAOC,SAAS;AAChB,OAAOC,UAAU;AACjB,OAAOC,SAAS;AAChB,OAAOC,OAAO;AACd,OAAOC,cAAc;AACrB,OAAOC,aAAa;AACpB,OAAOC,QAAQ;AACf,OAAOC,KAAK;AACZ,OAAOC,KAAK;AACZ,OAAOC,OAAO;AACd,OAAOC,QAAQ;AACf,OAAOC,MAAM;AACb,OAAOC,YAAY;AAAwB;AAAA;AAI3C,IAAMC,KAAK,GAAGnB,0BAA0B,EAAE;AAC1C,IAAMoB,MAAM,GAAGnB,qBAAqB,EAAE;AAItC,eAAe,SAASoB,GAAG,GAAG;EAE9B,sBAAgCnB,KAAK,CAACoB,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA9CC,QAAQ;IAAEC,WAAW;EAK1B,IAAID,QAAQ,EAAE;IACZ,OACE,KAAC,mBAAmB;MAAA,UAClB,KAAC,MAAM,CAAC,SAAS;QAAC,gBAAgB,EAAC,WAAW;QAAA,UAC5C,MAAC,MAAM,CAAC,KAAK;UAAC,aAAa,EAAE;YAACE,WAAW,EAAE;UAAU,CAAE;UAAA,WACrD,KAAC,MAAM,CAAC,MAAM;YACZ,IAAI,EAAC,cAAc;YACnB,SAAS,EAAEP,YAAa;YACxB,OAAO,EAAE;cAACQ,WAAW,EAAE;YAAS;UAAE,EAClC,EACF,KAAC,MAAM,CAAC,MAAM;YACZ,IAAI,EAAC,WAAW;YAChB,SAAS,EAAEpB;UAAU,EACrB,EACF,KAAC,MAAM,CAAC,MAAM;YACZ,IAAI,EAAC,OAAO;YACZ,SAAS,EAAEO,KAAM;YACjB,OAAO,EAAE;cAACa,WAAW,EAAE;YAAiB;UAAE,EAC1C,EACF,KAAC,MAAM,CAAC,MAAM;YACZ,IAAI,EAAC,SAAS;YACd,SAAS,EAAEjB;UAAQ,EACnB;QAAA;MACW;IACE,EACC;EAE1B,CAAC,MACI;IACH,OACE,KAAC,KAAK;MAAC,WAAW,EAAEe;IAAY,EAAG;EAEvC;AAEF;AAGA,IAAMG,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}